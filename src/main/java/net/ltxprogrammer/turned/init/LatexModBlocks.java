package net.ltxprogrammer.turned.init;

import net.ltxprogrammer.turned.LatexMod;
import net.ltxprogrammer.turned.block.BigcouchBlock;
import net.ltxprogrammer.turned.block.Blacklabblock1aBlock;
import net.ltxprogrammer.turned.block.Blacklabblock2Block;
import net.ltxprogrammer.turned.block.Blacklabblock3Block;
import net.ltxprogrammer.turned.block.BlacklabslabBlock;
import net.ltxprogrammer.turned.block.BlastDoorOpenBlock;
import net.ltxprogrammer.turned.block.BlastdoorBlock;
import net.ltxprogrammer.turned.block.Bluelabblock1Block;
import net.ltxprogrammer.turned.block.Bluelabblock2Block;
import net.ltxprogrammer.turned.block.BluelabslabsBlock;
import net.ltxprogrammer.turned.block.Bookpile1Block;
import net.ltxprogrammer.turned.block.Bookpile2Block;
import net.ltxprogrammer.turned.block.Bookpile3Block;
import net.ltxprogrammer.turned.block.Bookpile4Block;
import net.ltxprogrammer.turned.block.Bookpile5Block;
import net.ltxprogrammer.turned.block.BoxBlock;
import net.ltxprogrammer.turned.block.BoxInventoryBlock;
import net.ltxprogrammer.turned.block.BoxTrapBlock;
import net.ltxprogrammer.turned.block.BrokenTVBlock;
import net.ltxprogrammer.turned.block.BunkerBlockSmoothBlock;
import net.ltxprogrammer.turned.block.BunkerBlockStripedBlock;
import net.ltxprogrammer.turned.block.BunkerDoorBlock;
import net.ltxprogrammer.turned.block.BunkerHatchOpenBlock;
import net.ltxprogrammer.turned.block.BunkerSlabsBlock;
import net.ltxprogrammer.turned.block.BunkerStairsBlock;
import net.ltxprogrammer.turned.block.BunkerWallBlock;
import net.ltxprogrammer.turned.block.BunkerblockBlock;
import net.ltxprogrammer.turned.block.BunkerdooropenBlock;
import net.ltxprogrammer.turned.block.BunkerhatchBlock;
import net.ltxprogrammer.turned.block.CagelightBlock;
import net.ltxprogrammer.turned.block.CeilinglightBlock;
import net.ltxprogrammer.turned.block.CeilinglightenhancedBlock;
import net.ltxprogrammer.turned.block.ChesTrapBlock;
import net.ltxprogrammer.turned.block.ComputerBlock;
import net.ltxprogrammer.turned.block.ComputerOnBlock;
import net.ltxprogrammer.turned.block.ControlpaneloffBlock;
import net.ltxprogrammer.turned.block.ControlpanelonBlock;
import net.ltxprogrammer.turned.block.CrateBlock;
import net.ltxprogrammer.turned.block.CryopodBlock;
import net.ltxprogrammer.turned.block.DarklatexhiveBlock;
import net.ltxprogrammer.turned.block.DarklatexpuddleharmlessBlock;
import net.ltxprogrammer.turned.block.DeskBlock;
import net.ltxprogrammer.turned.block.DoomDollBlock;
import net.ltxprogrammer.turned.block.EmptycapsuleBlock;
import net.ltxprogrammer.turned.block.EvilBeaconBlock;
import net.ltxprogrammer.turned.block.EvilbeacononBlock;
import net.ltxprogrammer.turned.block.FlaskcontainerBlock;
import net.ltxprogrammer.turned.block.GlassDoorBlock;
import net.ltxprogrammer.turned.block.Greenlabblock1Block;
import net.ltxprogrammer.turned.block.Greenlabblock2Block;
import net.ltxprogrammer.turned.block.GreenlabslabsBlock;
import net.ltxprogrammer.turned.block.HighPressureCylinderBlock;
import net.ltxprogrammer.turned.block.HighPressureCylinderGreenBlock;
import net.ltxprogrammer.turned.block.HighPressureCylinderRedBlock;
import net.ltxprogrammer.turned.block.InfesteddlcobblestoneBlock;
import net.ltxprogrammer.turned.block.InvertedGlassDoorBlock;
import net.ltxprogrammer.turned.block.InvertedOpenGlassDoorBlock;
import net.ltxprogrammer.turned.block.LabDoorBlock;
import net.ltxprogrammer.turned.block.LabDoorOpenBlock;
import net.ltxprogrammer.turned.block.LabEquipmentBlock;
import net.ltxprogrammer.turned.block.LaptopBlock;
import net.ltxprogrammer.turned.block.LaptopClosedBlock;
import net.ltxprogrammer.turned.block.LaptopONBlock;
import net.ltxprogrammer.turned.block.LatexcapsuleBlock;
import net.ltxprogrammer.turned.block.LatexeaterslimeBlock;
import net.ltxprogrammer.turned.block.Librarywall1Block;
import net.ltxprogrammer.turned.block.Librarywall2Block;
import net.ltxprogrammer.turned.block.Librarywall3Block;
import net.ltxprogrammer.turned.block.Librarywall4Block;
import net.ltxprogrammer.turned.block.Librarywall5Block;
import net.ltxprogrammer.turned.block.LockerBlock;
import net.ltxprogrammer.turned.block.MakeshiftBeaconBlock;
import net.ltxprogrammer.turned.block.MakeshiftBeaconOnBlock;
import net.ltxprogrammer.turned.block.MetalBoxBlock;
import net.ltxprogrammer.turned.block.MicroscopeBlock;
import net.ltxprogrammer.turned.block.NukeBlock;
import net.ltxprogrammer.turned.block.OfficechairBlock;
import net.ltxprogrammer.turned.block.OfficetableBlock;
import net.ltxprogrammer.turned.block.OldTVBlock;
import net.ltxprogrammer.turned.block.OldTVONBlock;
import net.ltxprogrammer.turned.block.OpenGlassDoorBlock;
import net.ltxprogrammer.turned.block.PlanterBlock;
import net.ltxprogrammer.turned.block.PurpleLabSlabBlock;
import net.ltxprogrammer.turned.block.Purplelabblock1Block;
import net.ltxprogrammer.turned.block.Purplelabblock2Block;
import net.ltxprogrammer.turned.block.RedLabBlock2Block;
import net.ltxprogrammer.turned.block.RedLabSlabBlock;
import net.ltxprogrammer.turned.block.RedLabSlabsBlock;
import net.ltxprogrammer.turned.block.RedLabStairsBlock;
import net.ltxprogrammer.turned.block.Redlab1Block;
import net.ltxprogrammer.turned.block.Redlab2Block;
import net.ltxprogrammer.turned.block.Redlab3Block;
import net.ltxprogrammer.turned.block.Redlab4Block;
import net.ltxprogrammer.turned.block.Redlab5Block;
import net.ltxprogrammer.turned.block.Redlabblock1Block;
import net.ltxprogrammer.turned.block.ReinforcedblueconcreteBlock;
import net.ltxprogrammer.turned.block.ReinforcedconcreteBlock;
import net.ltxprogrammer.turned.block.ReinforcedgreenconcreteBlock;
import net.ltxprogrammer.turned.block.ReinforcedpurpleconcreteBlock;
import net.ltxprogrammer.turned.block.ReinforcedredconcreteBlock;
import net.ltxprogrammer.turned.block.ReinforcedyellowconcreteBlock;
import net.ltxprogrammer.turned.block.SaveStationBlock;
import net.ltxprogrammer.turned.block.ScientificCrateBlock;
import net.ltxprogrammer.turned.block.ServersBlock;
import net.ltxprogrammer.turned.block.SmallBoxBlock;
import net.ltxprogrammer.turned.block.SupplyCrateBlock;
import net.ltxprogrammer.turned.block.THECONEBlock;
import net.ltxprogrammer.turned.block.TacticalbombBlock;
import net.ltxprogrammer.turned.block.TelephoneBlock;
import net.ltxprogrammer.turned.block.TelephonenophoneBlock;
import net.ltxprogrammer.turned.block.VentBlock;
import net.ltxprogrammer.turned.block.VentOpenBlock;
import net.ltxprogrammer.turned.block.WallscreenBlock;
import net.ltxprogrammer.turned.block.WallscreenonBlock;
import net.ltxprogrammer.turned.block.Yellowlabblock1Block;
import net.ltxprogrammer.turned.block.Yellowlabblock2Block;
import net.ltxprogrammer.turned.block.YellowlabslabsBlock;
import net.minecraft.world.level.block.Block;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegistryObject;

/* loaded from: turned-730838-4352793_mapped_official_1.18.2.jar:net/ltxprogrammer/turned/init/LatexModBlocks.class */
public class LatexModBlocks {
    public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, LatexMod.MODID);
    public static final RegistryObject<Block> DARKLATEXHIVE = REGISTRY.register("darklatexhive", DarklatexhiveBlock::new);
    public static final RegistryObject<Block> INFESTEDDLCOBBLESTONE = REGISTRY.register("infesteddlcobblestone", InfesteddlcobblestoneBlock::new);
    public static final RegistryObject<Block> EMPTYCAPSULE = REGISTRY.register("emptycapsule", EmptycapsuleBlock::new);
    public static final RegistryObject<Block> LATEXCAPSULE = REGISTRY.register("latexcapsule", LatexcapsuleBlock::new);
    public static final RegistryObject<Block> DARKLATEXPUDDLEHARMLESS = REGISTRY.register("darklatexpuddleharmless", DarklatexpuddleharmlessBlock::new);
    public static final RegistryObject<Block> LATEXEATERSLIME = REGISTRY.register("latexeaterslime", LatexeaterslimeBlock::new);
    public static final RegistryObject<Block> BLACKLABBLOCK_1A = REGISTRY.register("blacklabblock_1a", Blacklabblock1aBlock::new);
    public static final RegistryObject<Block> BLACKLABBLOCK_2 = REGISTRY.register("blacklabblock_2", Blacklabblock2Block::new);
    public static final RegistryObject<Block> BLACKLABBLOCK_3 = REGISTRY.register("blacklabblock_3", Blacklabblock3Block::new);
    public static final RegistryObject<Block> BLACKLABSLAB = REGISTRY.register("blacklabslab", BlacklabslabBlock::new);
    public static final RegistryObject<Block> REINFORCEDCONCRETE = REGISTRY.register("reinforcedconcrete", ReinforcedconcreteBlock::new);
    public static final RegistryObject<Block> BLUELABBLOCK_1 = REGISTRY.register("bluelabblock_1", Bluelabblock1Block::new);
    public static final RegistryObject<Block> BLUELABBLOCK_2 = REGISTRY.register("bluelabblock_2", Bluelabblock2Block::new);
    public static final RegistryObject<Block> BLUELABSLABS = REGISTRY.register("bluelabslabs", BluelabslabsBlock::new);
    public static final RegistryObject<Block> REINFORCEDBLUECONCRETE = REGISTRY.register("reinforcedblueconcrete", ReinforcedblueconcreteBlock::new);
    public static final RegistryObject<Block> GREENLABBLOCK_1 = REGISTRY.register("greenlabblock_1", Greenlabblock1Block::new);
    public static final RegistryObject<Block> GREENLABBLOCK_2 = REGISTRY.register("greenlabblock_2", Greenlabblock2Block::new);
    public static final RegistryObject<Block> GREENLABSLABS = REGISTRY.register("greenlabslabs", GreenlabslabsBlock::new);
    public static final RegistryObject<Block> REINFORCEDGREENCONCRETE = REGISTRY.register("reinforcedgreenconcrete", ReinforcedgreenconcreteBlock::new);
    public static final RegistryObject<Block> PURPLELABBLOCK_1 = REGISTRY.register("purplelabblock_1", Purplelabblock1Block::new);
    public static final RegistryObject<Block> PURPLELABBLOCK_2 = REGISTRY.register("purplelabblock_2", Purplelabblock2Block::new);
    public static final RegistryObject<Block> PURPLE_LAB_SLAB = REGISTRY.register("purple_lab_slab", PurpleLabSlabBlock::new);
    public static final RegistryObject<Block> REINFORCEDPURPLECONCRETE = REGISTRY.register("reinforcedpurpleconcrete", ReinforcedpurpleconcreteBlock::new);
    public static final RegistryObject<Block> YELLOWLABBLOCK_1 = REGISTRY.register("yellowlabblock_1", Yellowlabblock1Block::new);
    public static final RegistryObject<Block> YELLOWLABBLOCK_2 = REGISTRY.register("yellowlabblock_2", Yellowlabblock2Block::new);
    public static final RegistryObject<Block> YELLOWLABSLABS = REGISTRY.register("yellowlabslabs", YellowlabslabsBlock::new);
    public static final RegistryObject<Block> REINFORCEDYELLOWCONCRETE = REGISTRY.register("reinforcedyellowconcrete", ReinforcedyellowconcreteBlock::new);
    public static final RegistryObject<Block> REDLABBLOCK_1 = REGISTRY.register("redlabblock_1", Redlabblock1Block::new);
    public static final RegistryObject<Block> RED_LAB_BLOCK_2 = REGISTRY.register("red_lab_block_2", RedLabBlock2Block::new);
    public static final RegistryObject<Block> RED_LAB_SLABS = REGISTRY.register("red_lab_slabs", RedLabSlabsBlock::new);
    public static final RegistryObject<Block> REINFORCEDREDCONCRETE = REGISTRY.register("reinforcedredconcrete", ReinforcedredconcreteBlock::new);
    public static final RegistryObject<Block> REDLAB_1 = REGISTRY.register("redlab_1", Redlab1Block::new);
    public static final RegistryObject<Block> REDLAB_2 = REGISTRY.register("redlab_2", Redlab2Block::new);
    public static final RegistryObject<Block> REDLAB_3 = REGISTRY.register("redlab_3", Redlab3Block::new);
    public static final RegistryObject<Block> REDLAB_4 = REGISTRY.register("redlab_4", Redlab4Block::new);
    public static final RegistryObject<Block> REDLAB_5 = REGISTRY.register("redlab_5", Redlab5Block::new);
    public static final RegistryObject<Block> RED_LAB_SLAB = REGISTRY.register("red_lab_slab", RedLabSlabBlock::new);
    public static final RegistryObject<Block> RED_LAB_STAIRS = REGISTRY.register("red_lab_stairs", RedLabStairsBlock::new);
    public static final RegistryObject<Block> BUNKERBLOCK = REGISTRY.register("bunkerblock", BunkerblockBlock::new);
    public static final RegistryObject<Block> BUNKER_BLOCK_STRIPED = REGISTRY.register("bunker_block_striped", BunkerBlockStripedBlock::new);
    public static final RegistryObject<Block> BUNKER_BLOCK_SMOOTH = REGISTRY.register("bunker_block_smooth", BunkerBlockSmoothBlock::new);
    public static final RegistryObject<Block> BUNKER_STAIRS = REGISTRY.register("bunker_stairs", BunkerStairsBlock::new);
    public static final RegistryObject<Block> BUNKER_SLABS = REGISTRY.register("bunker_slabs", BunkerSlabsBlock::new);
    public static final RegistryObject<Block> BUNKER_WALL = REGISTRY.register("bunker_wall", BunkerWallBlock::new);
    public static final RegistryObject<Block> LIBRARYWALL_1 = REGISTRY.register("librarywall_1", Librarywall1Block::new);
    public static final RegistryObject<Block> LIBRARYWALL_2 = REGISTRY.register("librarywall_2", Librarywall2Block::new);
    public static final RegistryObject<Block> LIBRARYWALL_3 = REGISTRY.register("librarywall_3", Librarywall3Block::new);
    public static final RegistryObject<Block> LIBRARYWALL_4 = REGISTRY.register("librarywall_4", Librarywall4Block::new);
    public static final RegistryObject<Block> LIBRARYWALL_5 = REGISTRY.register("librarywall_5", Librarywall5Block::new);
    public static final RegistryObject<Block> SUPPLY_CRATE = REGISTRY.register("supply_crate", SupplyCrateBlock::new);
    public static final RegistryObject<Block> SMALL_BOX = REGISTRY.register("small_box", SmallBoxBlock::new);
    public static final RegistryObject<Block> BOX = REGISTRY.register("box", BoxBlock::new);
    public static final RegistryObject<Block> BOX_INVENTORY = REGISTRY.register("box_inventory", BoxInventoryBlock::new);
    public static final RegistryObject<Block> BOX_TRAP = REGISTRY.register("box_trap", BoxTrapBlock::new);
    public static final RegistryObject<Block> SCIENTIFIC_CRATE = REGISTRY.register("scientific_crate", ScientificCrateBlock::new);
    public static final RegistryObject<Block> CRATE = REGISTRY.register("crate", CrateBlock::new);
    public static final RegistryObject<Block> METAL_BOX = REGISTRY.register("metal_box", MetalBoxBlock::new);
    public static final RegistryObject<Block> CHES_TRAP = REGISTRY.register("ches_trap", ChesTrapBlock::new);
    public static final RegistryObject<Block> CONTROLPANELOFF = REGISTRY.register("controlpaneloff", ControlpaneloffBlock::new);
    public static final RegistryObject<Block> SERVERS = REGISTRY.register("servers", ServersBlock::new);
    public static final RegistryObject<Block> OLD_TV = REGISTRY.register("old_tv", OldTVBlock::new);
    public static final RegistryObject<Block> BROKEN_TV = REGISTRY.register("broken_tv", BrokenTVBlock::new);
    public static final RegistryObject<Block> COMPUTER = REGISTRY.register("computer", ComputerBlock::new);
    public static final RegistryObject<Block> LAPTOP_CLOSED = REGISTRY.register("laptop_closed", LaptopClosedBlock::new);
    public static final RegistryObject<Block> DESK = REGISTRY.register("desk", DeskBlock::new);
    public static final RegistryObject<Block> OFFICECHAIR = REGISTRY.register("officechair", OfficechairBlock::new);
    public static final RegistryObject<Block> PLANTER = REGISTRY.register("planter", PlanterBlock::new);
    public static final RegistryObject<Block> FLASKCONTAINER = REGISTRY.register("flaskcontainer", FlaskcontainerBlock::new);
    public static final RegistryObject<Block> TELEPHONE = REGISTRY.register("telephone", TelephoneBlock::new);
    public static final RegistryObject<Block> VENT = REGISTRY.register("vent", VentBlock::new);
    public static final RegistryObject<Block> BUNKERHATCH = REGISTRY.register("bunkerhatch", BunkerhatchBlock::new);
    public static final RegistryObject<Block> BUNKER_DOOR = REGISTRY.register("bunker_door", BunkerDoorBlock::new);
    public static final RegistryObject<Block> LAB_DOOR = REGISTRY.register("lab_door", LabDoorBlock::new);
    public static final RegistryObject<Block> BLASTDOOR = REGISTRY.register("blastdoor", BlastdoorBlock::new);
    public static final RegistryObject<Block> CEILINGLIGHT = REGISTRY.register("ceilinglight", CeilinglightBlock::new);
    public static final RegistryObject<Block> CAGELIGHT = REGISTRY.register("cagelight", CagelightBlock::new);
    public static final RegistryObject<Block> SAVE_STATION = REGISTRY.register("save_station", SaveStationBlock::new);
    public static final RegistryObject<Block> OFFICETABLE = REGISTRY.register("officetable", OfficetableBlock::new);
    public static final RegistryObject<Block> LOCKER = REGISTRY.register("locker", LockerBlock::new);
    public static final RegistryObject<Block> LAB_EQUIPMENT = REGISTRY.register("lab_equipment", LabEquipmentBlock::new);
    public static final RegistryObject<Block> WALLSCREEN = REGISTRY.register("wallscreen", WallscreenBlock::new);
    public static final RegistryObject<Block> MICROSCOPE = REGISTRY.register("microscope", MicroscopeBlock::new);
    public static final RegistryObject<Block> CRYOPOD = REGISTRY.register("cryopod", CryopodBlock::new);
    public static final RegistryObject<Block> BOOKPILE_1 = REGISTRY.register("bookpile_1", Bookpile1Block::new);
    public static final RegistryObject<Block> BOOKPILE_2 = REGISTRY.register("bookpile_2", Bookpile2Block::new);
    public static final RegistryObject<Block> BOOKPILE_3 = REGISTRY.register("bookpile_3", Bookpile3Block::new);
    public static final RegistryObject<Block> BOOKPILE_4 = REGISTRY.register("bookpile_4", Bookpile4Block::new);
    public static final RegistryObject<Block> BOOKPILE_5 = REGISTRY.register("bookpile_5", Bookpile5Block::new);
    public static final RegistryObject<Block> GLASS_DOOR = REGISTRY.register("glass_door", GlassDoorBlock::new);
    public static final RegistryObject<Block> INVERTED_GLASS_DOOR = REGISTRY.register("inverted_glass_door", InvertedGlassDoorBlock::new);
    public static final RegistryObject<Block> BIGCOUCH = REGISTRY.register("bigcouch", BigcouchBlock::new);
    public static final RegistryObject<Block> HIGH_PRESSURE_CYLINDER = REGISTRY.register("high_pressure_cylinder", HighPressureCylinderBlock::new);
    public static final RegistryObject<Block> HIGH_PRESSURE_CYLINDER_RED = REGISTRY.register("high_pressure_cylinder_red", HighPressureCylinderRedBlock::new);
    public static final RegistryObject<Block> HIGH_PRESSURE_CYLINDER_GREEN = REGISTRY.register("high_pressure_cylinder_green", HighPressureCylinderGreenBlock::new);
    public static final RegistryObject<Block> CEILINGLIGHTENHANCED = REGISTRY.register("ceilinglightenhanced", CeilinglightenhancedBlock::new);
    public static final RegistryObject<Block> MAKESHIFT_BEACON = REGISTRY.register("makeshift_beacon", MakeshiftBeaconBlock::new);
    public static final RegistryObject<Block> EVIL_BEACON = REGISTRY.register("evil_beacon", EvilBeaconBlock::new);
    public static final RegistryObject<Block> TACTICALBOMB = REGISTRY.register("tacticalbomb", TacticalbombBlock::new);
    public static final RegistryObject<Block> NUKE = REGISTRY.register("nuke", NukeBlock::new);
    public static final RegistryObject<Block> COMPUTER_ON = REGISTRY.register("computer_on", ComputerOnBlock::new);
    public static final RegistryObject<Block> LAPTOP = REGISTRY.register("laptop", LaptopBlock::new);
    public static final RegistryObject<Block> LAPTOP_ON = REGISTRY.register("laptop_on", LaptopONBlock::new);
    public static final RegistryObject<Block> TELEPHONENOPHONE = REGISTRY.register("telephonenophone", TelephonenophoneBlock::new);
    public static final RegistryObject<Block> VENT_OPEN = REGISTRY.register("vent_open", VentOpenBlock::new);
    public static final RegistryObject<Block> BUNKER_HATCH_OPEN = REGISTRY.register("bunker_hatch_open", BunkerHatchOpenBlock::new);
    public static final RegistryObject<Block> BUNKERDOOROPEN = REGISTRY.register("bunkerdooropen", BunkerdooropenBlock::new);
    public static final RegistryObject<Block> LAB_DOOR_OPEN = REGISTRY.register("lab_door_open", LabDoorOpenBlock::new);
    public static final RegistryObject<Block> WALLSCREENON = REGISTRY.register("wallscreenon", WallscreenonBlock::new);
    public static final RegistryObject<Block> OPEN_GLASS_DOOR = REGISTRY.register("open_glass_door", OpenGlassDoorBlock::new);
    public static final RegistryObject<Block> INVERTED_OPEN_GLASS_DOOR = REGISTRY.register("inverted_open_glass_door", InvertedOpenGlassDoorBlock::new);
    public static final RegistryObject<Block> THECONE = REGISTRY.register("thecone", THECONEBlock::new);
    public static final RegistryObject<Block> OLD_TVON = REGISTRY.register("old_tvon", OldTVONBlock::new);
    public static final RegistryObject<Block> EVILBEACONON = REGISTRY.register("evilbeaconon", EvilbeacononBlock::new);
    public static final RegistryObject<Block> MAKESHIFT_BEACON_ON = REGISTRY.register("makeshift_beacon_on", MakeshiftBeaconOnBlock::new);
    public static final RegistryObject<Block> DOOM_DOLL = REGISTRY.register("doom_doll", DoomDollBlock::new);
    public static final RegistryObject<Block> CONTROLPANELON = REGISTRY.register("controlpanelon", ControlpanelonBlock::new);
    public static final RegistryObject<Block> BLAST_DOOR_OPEN = REGISTRY.register("blast_door_open", BlastDoorOpenBlock::new);

    @Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = {Dist.CLIENT})
    /* loaded from: turned-730838-4352793_mapped_official_1.18.2.jar:net/ltxprogrammer/turned/init/LatexModBlocks$ClientSideHandler.class */
    public static class ClientSideHandler {
        @SubscribeEvent
        public static void clientSetup(FMLClientSetupEvent event) {
            EmptycapsuleBlock.registerRenderLayer();
            LatexcapsuleBlock.registerRenderLayer();
            DarklatexpuddleharmlessBlock.registerRenderLayer();
            SupplyCrateBlock.registerRenderLayer();
            SmallBoxBlock.registerRenderLayer();
            ScientificCrateBlock.registerRenderLayer();
            CrateBlock.registerRenderLayer();
            ChesTrapBlock.registerRenderLayer();
            ControlpaneloffBlock.registerRenderLayer();
            ServersBlock.registerRenderLayer();
            OldTVBlock.registerRenderLayer();
            BrokenTVBlock.registerRenderLayer();
            ComputerBlock.registerRenderLayer();
            LaptopClosedBlock.registerRenderLayer();
            DeskBlock.registerRenderLayer();
            OfficechairBlock.registerRenderLayer();
            PlanterBlock.registerRenderLayer();
            FlaskcontainerBlock.registerRenderLayer();
            TelephoneBlock.registerRenderLayer();
            VentBlock.registerRenderLayer();
            BunkerhatchBlock.registerRenderLayer();
            BunkerDoorBlock.registerRenderLayer();
            LabDoorBlock.registerRenderLayer();
            BlastdoorBlock.registerRenderLayer();
            CeilinglightBlock.registerRenderLayer();
            CagelightBlock.registerRenderLayer();
            SaveStationBlock.registerRenderLayer();
            OfficetableBlock.registerRenderLayer();
            LockerBlock.registerRenderLayer();
            LabEquipmentBlock.registerRenderLayer();
            WallscreenBlock.registerRenderLayer();
            MicroscopeBlock.registerRenderLayer();
            CryopodBlock.registerRenderLayer();
            Bookpile1Block.registerRenderLayer();
            Bookpile2Block.registerRenderLayer();
            Bookpile3Block.registerRenderLayer();
            Bookpile4Block.registerRenderLayer();
            Bookpile5Block.registerRenderLayer();
            GlassDoorBlock.registerRenderLayer();
            InvertedGlassDoorBlock.registerRenderLayer();
            BigcouchBlock.registerRenderLayer();
            HighPressureCylinderBlock.registerRenderLayer();
            HighPressureCylinderRedBlock.registerRenderLayer();
            HighPressureCylinderGreenBlock.registerRenderLayer();
            CeilinglightenhancedBlock.registerRenderLayer();
            ComputerOnBlock.registerRenderLayer();
            LaptopBlock.registerRenderLayer();
            LaptopONBlock.registerRenderLayer();
            TelephonenophoneBlock.registerRenderLayer();
            VentOpenBlock.registerRenderLayer();
            BunkerHatchOpenBlock.registerRenderLayer();
            BunkerdooropenBlock.registerRenderLayer();
            LabDoorOpenBlock.registerRenderLayer();
            WallscreenonBlock.registerRenderLayer();
            OpenGlassDoorBlock.registerRenderLayer();
            InvertedOpenGlassDoorBlock.registerRenderLayer();
            THECONEBlock.registerRenderLayer();
            OldTVONBlock.registerRenderLayer();
            DoomDollBlock.registerRenderLayer();
            ControlpanelonBlock.registerRenderLayer();
            BlastDoorOpenBlock.registerRenderLayer();
        }
    }
}
