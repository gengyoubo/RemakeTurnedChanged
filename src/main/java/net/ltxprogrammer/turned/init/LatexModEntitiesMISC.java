package net.ltxprogrammer.turned.init;

//import net.ltxprogrammer.changed.entity.LatexEntity;
import net.ltxprogrammer.turned.entity.AHVHertxEntity;
import net.ltxprogrammer.turned.entity.AHVHertxSitEntity;
import net.ltxprogrammer.turned.entity.AR70AssaultRifleEntity;
import net.ltxprogrammer.turned.entity.AllydroppodEntity;
import net.ltxprogrammer.turned.entity.ArmedDroneHertxEntity;
import net.ltxprogrammer.turned.entity.ArmedDroneHertxWaitEntity;
import net.ltxprogrammer.turned.entity.AshburyHertxEntity;
import net.ltxprogrammer.turned.entity.AshburySitEntity;
import net.ltxprogrammer.turned.entity.BeeHertxEntity;
import net.ltxprogrammer.turned.entity.BeeHertxSitEntity;
import net.ltxprogrammer.turned.entity.CivilianEntity;
import net.ltxprogrammer.turned.entity.CivilianMilitiaMeleeEntity;
import net.ltxprogrammer.turned.entity.CivlianMilitiaEntity;
import net.ltxprogrammer.turned.entity.CrystalbowEntity;
import net.ltxprogrammer.turned.entity.DLbeeEntity;
import net.ltxprogrammer.turned.entity.DROPPODEntity;
import net.ltxprogrammer.turned.entity.DarkLatexCakeEntity;
import net.ltxprogrammer.turned.entity.DarkLatexCentaurEntity;
import net.ltxprogrammer.turned.entity.DarkLatexCreeperEnhancedEntity;
import net.ltxprogrammer.turned.entity.DarkLatexCreeperEntity;
import net.ltxprogrammer.turned.entity.DarkLatexFoxEntity;
import net.ltxprogrammer.turned.entity.DarkLatexFoxScientistEntity;
import net.ltxprogrammer.turned.entity.DarkLatexFoxSniperEntity;
import net.ltxprogrammer.turned.entity.DarkLatexMothEntity;
import net.ltxprogrammer.turned.entity.DarkLatexQueenBeeEntity;
import net.ltxprogrammer.turned.entity.DarkLatexSkeletonEntity;
import net.ltxprogrammer.turned.entity.DarkLatexSnakeEntity;
import net.ltxprogrammer.turned.entity.DarkLatexSnepEntity;
import net.ltxprogrammer.turned.entity.DarkLatexSpiderEntity;
import net.ltxprogrammer.turned.entity.DarkLatexSpiderQueenEntity;
import net.ltxprogrammer.turned.entity.DarklatexEntity;
import net.ltxprogrammer.turned.entity.DarklatexconeEntity;
import net.ltxprogrammer.turned.entity.DarklatexslugEntity;
import net.ltxprogrammer.turned.entity.DartrifleEntity;
import net.ltxprogrammer.turned.entity.DlSquidDogEntity;
import net.ltxprogrammer.turned.entity.DlsharkEntity;
import net.ltxprogrammer.turned.entity.DroneHertxEntity;
import net.ltxprogrammer.turned.entity.DroneHertxWaitEntity;
import net.ltxprogrammer.turned.entity.EvilMilitaryEntity;
import net.ltxprogrammer.turned.entity.EvilScientistEntity;
import net.ltxprogrammer.turned.entity.EvilSniperEntity;
import net.ltxprogrammer.turned.entity.ExplosivegooEntity;
import net.ltxprogrammer.turned.entity.FlamethowerEntity;
import net.ltxprogrammer.turned.entity.HertxEntity;
import net.ltxprogrammer.turned.entity.HertxFBSitEntity;
import net.ltxprogrammer.turned.entity.HertxFSitEntity;
import net.ltxprogrammer.turned.entity.HertxSitEntity;
import net.ltxprogrammer.turned.entity.HertxSolWaitEntity;
import net.ltxprogrammer.turned.entity.HertxvarFBEntity;
import net.ltxprogrammer.turned.entity.HertxvarFEntity;
import net.ltxprogrammer.turned.entity.HertxvarSolEntity;
import net.ltxprogrammer.turned.entity.La4tankmorphmEntity;
import net.ltxprogrammer.turned.entity.La4tankmorphrEntity;
import net.ltxprogrammer.turned.entity.LatexDartRifleEntity;
import net.ltxprogrammer.turned.entity.LatexDropPodEntity;
import net.ltxprogrammer.turned.entity.LatexcannonEntity;
import net.ltxprogrammer.turned.entity.M4AssaultRifleEntity;
import net.ltxprogrammer.turned.entity.MatchLockMusketEntity;
import net.ltxprogrammer.turned.entity.MatchlockPistolEntity;
import net.ltxprogrammer.turned.entity.MilitaryEntity;
import net.ltxprogrammer.turned.entity.MilitaryRiotEntity;
import net.ltxprogrammer.turned.entity.MilitaryflameunitEntity;
import net.ltxprogrammer.turned.entity.NXTHertxEntity;
import net.ltxprogrammer.turned.entity.NXTSitEntity;
import net.ltxprogrammer.turned.entity.NoiseStalkerEntity;
import net.ltxprogrammer.turned.entity.OverundershotgunEntity;
import net.ltxprogrammer.turned.entity.PrisionerEntity;
import net.ltxprogrammer.turned.entity.PrisionerMilitiaMeleeEntity;
import net.ltxprogrammer.turned.entity.PrisionermilitiaEntity;
import net.ltxprogrammer.turned.entity.ProtectorSlimelingEntity;
import net.ltxprogrammer.turned.entity.ProtectorSlimelingsitEntity;
import net.ltxprogrammer.turned.entity.RevolvingGooCannonEntity;
import net.ltxprogrammer.turned.entity.ScientistEntity;
import net.ltxprogrammer.turned.entity.ScrapM16RifleEntity;
import net.ltxprogrammer.turned.entity.SlimelingEntity;
import net.ltxprogrammer.turned.entity.SlimelingTamedEntity;
import net.ltxprogrammer.turned.entity.SlimelingtamedsitEntity;
import net.ltxprogrammer.turned.entity.SneppleEntity;
import net.ltxprogrammer.turned.entity.TSCBerserkEntity;
import net.ltxprogrammer.turned.entity.TSCHunterEntity;
import net.ltxprogrammer.turned.entity.TSCOutsiderEntity;
import net.ltxprogrammer.turned.entity.TSCOutsiderGunnerEntity;
import net.ltxprogrammer.turned.entity.TSCPistolEntity;
import net.ltxprogrammer.turned.entity.TSCdroneEntity;
import net.ltxprogrammer.turned.entity.TankCannonEntity;
import net.minecraft.world.entity.Entity;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.entity.MobCategory;
import net.minecraft.world.entity.EntityType.Builder;
import net.minecraft.world.level.Level;
//import net.minecraftforge.event.entity.EntityAttributeCreationEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod.EventBusSubscriber;
import net.minecraftforge.fml.common.Mod.EventBusSubscriber.Bus;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegistryObject;

@EventBusSubscriber(
        bus = Bus.MOD
)
public class LatexModEntitiesMISC {
    public static final DeferredRegister<EntityType<?>> REGISTRY;
    public static final RegistryObject<EntityType<ExplosivegooEntity>> EXPLOSIVEGOO;
    public static final RegistryObject<EntityType<CrystalbowEntity>> CRYSTALBOW;
    public static final RegistryObject<EntityType<LatexcannonEntity>> LATEXCANNON;
    public static final RegistryObject<EntityType<RevolvingGooCannonEntity>> REVOLVING_GOO_CANNON;
    public static final RegistryObject<EntityType<DartrifleEntity>> DARTRIFLE;
    public static final RegistryObject<EntityType<MatchlockPistolEntity>> MATCHLOCK_PISTOL;
    public static final RegistryObject<EntityType<MatchLockMusketEntity>> MATCH_LOCK_MUSKET;
    public static final RegistryObject<EntityType<AR70AssaultRifleEntity>> AR_70_ASSAULT_RIFLE;
    public static final RegistryObject<EntityType<M4AssaultRifleEntity>> M_4_ASSAULT_RIFLE;
    public static final RegistryObject<EntityType<ScrapM16RifleEntity>> SCRAP_M_16_RIFLE;
    public static final RegistryObject<EntityType<TSCPistolEntity>> TSC_PISTOL;
    public static final RegistryObject<EntityType<OverundershotgunEntity>> OVERUNDERSHOTGUN;
    public static final RegistryObject<EntityType<FlamethowerEntity>> FLAMETHOWER;
    public static final RegistryObject<EntityType<LatexDartRifleEntity>> LATEX_DART_RIFLE;
    public static final RegistryObject<EntityType<TankCannonEntity>> TANK_CANNON;
    public static final RegistryObject<EntityType<SneppleEntity>> SNEPPLE;

    public LatexModEntitiesMISC () {
    }

    private static <T extends Entity> RegistryObject<EntityType<T>> register(String registryname, EntityType.Builder<T> entityTypeBuilder) {
        return REGISTRY.register(registryname, () -> entityTypeBuilder.build(registryname));
    }

    @SubscribeEvent
    public static void init(FMLCommonSetupEvent event) {
        event.enqueueWork(() -> {
            SlimelingEntity.init();
            DarklatexslugEntity.init();
            DarklatexEntity.init();
            DarkLatexCentaurEntity.init();
            DarkLatexSkeletonEntity.init();
            NoiseStalkerEntity.init();
            DlsharkEntity.init();
            DarkLatexMothEntity.init();
            DarkLatexSnepEntity.init();
            DarkLatexFoxEntity.init();
            DarkLatexFoxSniperEntity.init();
            DarkLatexSnakeEntity.init();
            DarkLatexSpiderEntity.init();
            DlSquidDogEntity.init();
            DLbeeEntity.init();
            DarkLatexQueenBeeEntity.init();
            DarkLatexSpiderQueenEntity.init();
            DarklatexconeEntity.init();
            HertxEntity.init();
            DroneHertxEntity.init();
            ArmedDroneHertxEntity.init();
            ScientistEntity.init();
            MilitaryEntity.init();
            MilitaryflameunitEntity.init();
            EvilScientistEntity.init();
            EvilSniperEntity.init();
            EvilMilitaryEntity.init();
            TSCOutsiderEntity.init();
            TSCOutsiderGunnerEntity.init();
            TSCdroneEntity.init();
            TSCHunterEntity.init();
            MilitaryRiotEntity.init();
            TSCBerserkEntity.init();
            DarkLatexCreeperEntity.init();
            DarkLatexCreeperEnhancedEntity.init();
            CivilianEntity.init();
            PrisionerEntity.init();
            PrisionermilitiaEntity.init();
            CivlianMilitiaEntity.init();
            DarkLatexFoxScientistEntity.init();
            BeeHertxEntity.init();
            AHVHertxEntity.init();
            La4tankmorphrEntity.init();
            La4tankmorphmEntity.init();
            NXTHertxEntity.init();
            DROPPODEntity.init();
            AllydroppodEntity.init();
            LatexDropPodEntity.init();
            HertxvarFEntity.init();
            HertxvarSolEntity.init();
            HertxvarFBEntity.init();
            HertxSitEntity.init();
            AshburyHertxEntity.init();
            AshburySitEntity.init();
            BeeHertxSitEntity.init();
            AHVHertxSitEntity.init();
            NXTSitEntity.init();
            HertxFSitEntity.init();
            HertxFBSitEntity.init();
            HertxSolWaitEntity.init();
            SlimelingTamedEntity.init();
            SlimelingtamedsitEntity.init();
            ProtectorSlimelingEntity.init();
            ProtectorSlimelingsitEntity.init();
            DarkLatexCakeEntity.init();
            DroneHertxWaitEntity.init();
            ArmedDroneHertxWaitEntity.init();
            CivilianMilitiaMeleeEntity.init();
            PrisionerMilitiaMeleeEntity.init();
        });
    }

    /*
    @SubscribeEvent
    public static void registerAttributes(EntityAttributeCreationEvent event) {
        event.put((EntityType)SLIMELING.get(), SlimelingEntity.createAttributes().build());
        event.put((EntityType)DARKLATEXSLUG.get(), DarklatexslugEntity.createAttributes().build());
        event.put((EntityType)DARKLATEX.get(), DarklatexEntity.createMonsterAttributes().build());
        event.put((EntityType)DARK_LATEX_CENTAUR.get(), DarkLatexCentaurEntity.createAttributes().build());
        event.put((EntityType)DARK_LATEX_SKELETON.get(), DarkLatexSkeletonEntity.createMonsterAttributes().build());
        event.put((EntityType)NOISE_STALKER.get(), NoiseStalkerEntity.createAttributes().build());
        event.put((EntityType)DLSHARK.get(), LatexEntity.createMonsterAttributes().build());
        event.put((EntityType)DARK_LATEX_MOTH.get(), DarkLatexMothEntity.createAttributes().build());
        event.put((EntityType)DARK_LATEX_SNEP.get(), DarkLatexSnepEntity.createMonsterAttributes().build());
        event.put((EntityType)DARK_LATEX_FOX.get(), DarkLatexFoxEntity.createMonsterAttributes().build());
        event.put((EntityType)DARK_LATEX_FOX_SNIPER.get(), DarkLatexFoxSniperEntity.createAttributes().build());
        event.put((EntityType)DARK_LATEX_SNAKE.get(), DarkLatexSnakeEntity.createAttributes().build());
        event.put((EntityType)DARK_LATEX_SPIDER.get(), DarkLatexSpiderEntity.createAttributes().build());
        event.put((EntityType)DL_SQUID_DOG.get(), DlSquidDogEntity.createAttributes().build());
        event.put((EntityType)D_LBEE.get(), DLbeeEntity.createAttributes().build());
        event.put((EntityType)DARK_LATEX_QUEEN_BEE.get(), DarkLatexQueenBeeEntity.createAttributes().build());
        event.put((EntityType)DARK_LATEX_SPIDER_QUEEN.get(), DarkLatexSpiderQueenEntity.createAttributes().build());
        event.put((EntityType)DARKLATEXCONE.get(), DarklatexconeEntity.createMonsterAttributes().build());
        event.put((EntityType)HERTX.get(), HertxEntity.createAttributes().build());
        event.put((EntityType)DRONE_HERTX.get(), DroneHertxEntity.createAttributes().build());
        event.put((EntityType)ARMED_DRONE_HERTX.get(), ArmedDroneHertxEntity.createAttributes().build());
        event.put((EntityType)SCIENTIST.get(), ScientistEntity.createAttributes().build());
        event.put((EntityType)MILITARY.get(), MilitaryEntity.createAttributes().build());
        event.put((EntityType)MILITARYFLAMEUNIT.get(), MilitaryflameunitEntity.createAttributes().build());
        event.put((EntityType)EVIL_SCIENTIST.get(), EvilScientistEntity.createAttributes().build());
        event.put((EntityType)EVIL_SNIPER.get(), EvilSniperEntity.createAttributes().build());
        event.put((EntityType)EVIL_MILITARY.get(), EvilMilitaryEntity.createAttributes().build());
        event.put((EntityType)TSC_OUTSIDER.get(), TSCOutsiderEntity.createAttributes().build());
        event.put((EntityType)TSC_OUTSIDER_GUNNER.get(), TSCOutsiderGunnerEntity.createAttributes().build());
        event.put((EntityType)TS_CDRONE.get(), TSCdroneEntity.createAttributes().build());
        event.put((EntityType)TSC_HUNTER.get(), TSCHunterEntity.createAttributes().build());
        event.put((EntityType)MILITARY_RIOT.get(), MilitaryRiotEntity.createAttributes().build());
        event.put((EntityType)TSC_BERSERK.get(), TSCBerserkEntity.createAttributes().build());
        event.put((EntityType)DARK_LATEX_CREEPER.get(), DarkLatexCreeperEntity.createAttributes().build());
        event.put((EntityType)DARK_LATEX_CREEPER_ENHANCED.get(), DarkLatexCreeperEnhancedEntity.createAttributes().build());
        event.put((EntityType)CIVILIAN.get(), CivilianEntity.createAttributes().build());
        event.put((EntityType)PRISIONER.get(), PrisionerEntity.createAttributes().build());
        event.put((EntityType)PRISIONERMILITIA.get(), PrisionermilitiaEntity.createAttributes().build());
        event.put((EntityType)CIVLIAN_MILITIA.get(), CivlianMilitiaEntity.createAttributes().build());
        event.put((EntityType)DARK_LATEX_FOX_SCIENTIST.get(), DarkLatexFoxScientistEntity.createAttributes().build());
        event.put((EntityType)BEE_HERTX.get(), BeeHertxEntity.createAttributes().build());
        event.put((EntityType)AHV_HERTX.get(), AHVHertxEntity.createAttributes().build());
        event.put((EntityType)LA_4TANKMORPHR.get(), La4tankmorphrEntity.createAttributes().build());
        event.put((EntityType)LA_4TANKMORPHM.get(), La4tankmorphmEntity.createAttributes().build());
        event.put((EntityType)NXT_HERTX.get(), NXTHertxEntity.createAttributes().build());
        event.put((EntityType)DROPPOD.get(), DROPPODEntity.createAttributes().build());
        event.put((EntityType)ALLYDROPPOD.get(), AllydroppodEntity.createAttributes().build());
        event.put((EntityType)LATEX_DROP_POD.get(), LatexDropPodEntity.createAttributes().build());
        event.put((EntityType)HERTXVAR_F.get(), HertxvarFEntity.createAttributes().build());
        event.put((EntityType)HERTXVAR_SOL.get(), HertxvarSolEntity.createAttributes().build());
        event.put((EntityType)HERTXVAR_FB.get(), HertxvarFBEntity.createAttributes().build());
        event.put((EntityType)HERTX_SIT.get(), HertxSitEntity.createAttributes().build());
        event.put((EntityType)ASHBURY_HERTX.get(), AshburyHertxEntity.createAttributes().build());
        event.put((EntityType)ASHBURY_SIT.get(), AshburySitEntity.createAttributes().build());
        event.put((EntityType)BEE_HERTX_SIT.get(), BeeHertxSitEntity.createAttributes().build());
        event.put((EntityType)AHV_HERTX_SIT.get(), AHVHertxSitEntity.createAttributes().build());
        event.put((EntityType)NXT_SIT.get(), NXTSitEntity.createAttributes().build());
        event.put((EntityType)HERTX_F_SIT.get(), HertxFSitEntity.createAttributes().build());
        event.put((EntityType)HERTX_FB_SIT.get(), HertxFBSitEntity.createAttributes().build());
        event.put((EntityType)HERTX_SOL_WAIT.get(), HertxSolWaitEntity.createAttributes().build());
        event.put((EntityType)SLIMELING_TAMED.get(), SlimelingTamedEntity.createAttributes().build());
        event.put((EntityType)SLIMELINGTAMEDSIT.get(), SlimelingtamedsitEntity.createAttributes().build());
        event.put((EntityType)PROTECTOR_SLIMELING.get(), ProtectorSlimelingEntity.createAttributes().build());
        event.put((EntityType)PROTECTOR_SLIMELINGSIT.get(), ProtectorSlimelingsitEntity.createAttributes().build());
        event.put((EntityType)DARK_LATEX_CAKE.get(), DarkLatexCakeEntity.createMonsterAttributes().build());
        event.put((EntityType)DRONE_HERTX_WAIT.get(), DroneHertxWaitEntity.createAttributes().build());
        event.put((EntityType)ARMED_DRONE_HERTX_WAIT.get(), ArmedDroneHertxWaitEntity.createAttributes().build());
        event.put((EntityType)CIVILIAN_MILITIA_MELEE.get(), CivilianMilitiaMeleeEntity.createAttributes().build());
        event.put((EntityType)PRISIONER_MILITIA_MELEE.get(), PrisionerMilitiaMeleeEntity.createAttributes().build());
    }
*/
    static {
        REGISTRY = DeferredRegister.create(ForgeRegistries.ENTITIES, "turned");
        //MISC类
        AR_70_ASSAULT_RIFLE = register("projectile_ar_70_assault_rifle", EntityType.Builder.<AR70AssaultRifleEntity>of(AR70AssaultRifleEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        M_4_ASSAULT_RIFLE = register("projectile_m_4_assault_rifle", EntityType.Builder.<M4AssaultRifleEntity>of(M4AssaultRifleEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        SCRAP_M_16_RIFLE = register("projectile_scrap_m_16_rifle", EntityType.Builder.<ScrapM16RifleEntity>of(ScrapM16RifleEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        TSC_PISTOL = register("projectile_tsc_pistol", EntityType.Builder.<TSCPistolEntity>of(TSCPistolEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        OVERUNDERSHOTGUN = register("projectile_overundershotgun", EntityType.Builder.<OverundershotgunEntity>of(OverundershotgunEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        FLAMETHOWER = register("projectile_flamethower", EntityType.Builder.<FlamethowerEntity>of(FlamethowerEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        LATEX_DART_RIFLE = register("projectile_latex_dart_rifle", EntityType.Builder.<LatexDartRifleEntity>of(LatexDartRifleEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        TANK_CANNON = register("projectile_tank_cannon", EntityType.Builder.<TankCannonEntity>of(TankCannonEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        SNEPPLE = register("projectile_snepple", EntityType.Builder.<SneppleEntity>of(SneppleEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        EXPLOSIVEGOO = register("projectile_explosivegoo", EntityType.Builder.<ExplosivegooEntity>of(ExplosivegooEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        CRYSTALBOW = register("projectile_crystalbow", EntityType.Builder.<CrystalbowEntity>of(CrystalbowEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        LATEXCANNON = register("projectile_latexcannon", EntityType.Builder.<LatexcannonEntity>of(LatexcannonEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        REVOLVING_GOO_CANNON = register("projectile_revolving_goo_cannon", EntityType.Builder.<RevolvingGooCannonEntity>of(RevolvingGooCannonEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        DARTRIFLE = register("projectile_dartrifle", EntityType.Builder.<DartrifleEntity>of(DartrifleEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        MATCHLOCK_PISTOL = register("projectile_matchlock_pistol", EntityType.Builder.<MatchlockPistolEntity>of(MatchlockPistolEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
        MATCH_LOCK_MUSKET = register("projectile_match_lock_musket", EntityType.Builder.<MatchLockMusketEntity>of(MatchLockMusketEntity::new, MobCategory.MISC).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(1).sized(0.5F, 0.5F));
    }
}